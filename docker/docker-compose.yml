version: '3.8'

services:
  influxdb:
    image: influxdb:latest  # Using the latest version of InfluxDB 2.x
    container_name: influxdb
    environment:
      INFLUXDB_ADMIN_USER: admin              # Admin user (optional)
      INFLUXDB_ADMIN_PASSWORD: admin          # Admin password (optional)
      INFLUXDB_HTTP_BIND_ADDRESS: ":8086"     # HTTP Bind Address
      INFLUXDB_BUCKET: my-bucket              # Optional: Set a default bucket
      INFLUXDB_ORG: my-org                    # Organization name
      INFLUXDB_TOKEN: 1223223ewdsxz1         # InfluxDB Token (replace with your generated token)
    ports:
      - "8086:8086"  # Expose InfluxDB's HTTP API on port 8086
    volumes:
      - influxdb-storage:/var/lib/influxdb2  # Persistent storage for data
    networks:
      - influxdb-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    depends_on:
      - influxdb

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092

volumes:
  influxdb-storage:
    driver: local
  grafana-data:

networks:
  influxdb-net:
    driver: bridge
